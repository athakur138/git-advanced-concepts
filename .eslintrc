{
  "extends": ["next", "next/core-web-vitals", "eslint-config-js-ts", "eslint-config-prettier"],
  "parserOptions": {
    "project": ["./tsconfig.json"],
  },
  "rules": {
    // following are the rules which are not included in the eslint-config-js-ts package
    "array-callback-return": "error",
    "class-methods-use-this": [
      "error",
      {
        "exceptMethods": [],
      },
    ],
    "default-case-last": "error",
    "new-cap": ["error", { "newIsCap": true, "capIsNew": false }],
    "no-script-url": ["error"],
    "no-caller": "error",
    "object-shorthand": ["error", "always"],
    "prefer-object-has-own": ["error"],
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/consistent-type-exports": "error",
    "@typescript-eslint/consistent-type-imports": "error",
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": "error",
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/prefer-for-of": "error",
    "@typescript-eslint/consistent-type-definitions": "error",
    "@typescript-eslint/non-nullable-type-assertion-style": "error",
    "@typescript-eslint/consistent-indexed-object-style": "off",
    "@typescript-eslint/consistent-type-assertions": [
      "error",
      {
        "assertionStyle": "as",
        "objectLiteralTypeAssertions": "allow",
      },
    ],
    "@typescript-eslint/default-param-last": "error",
    "@typescript-eslint/no-use-before-define": "error",
    "@typescript-eslint/prefer-promise-reject-errors": "error",
  },
}
